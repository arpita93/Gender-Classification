from sklearn import tree
from sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier
from sklearn.neural_network import MLPClassifier
from sklearn.neighbors import KNeighborsClassifier
from sklearn.svm import SVC
from sklearn.ensemble import GradientBoostingClassifier
from sklearn.naive_bayes import GaussianNB
from sklearn.discriminant_analysis import QuadraticDiscriminantAnalysis
import numpy as np
from sklearn.metrics import accuracy_score

clf = tree.DecisionTreeClassifier()
clf1 = RandomForestClassifier()
clf2 = MLPClassifier(alpha = 0.01)
clf3 = KNeighborsClassifier(n_neighbors = 3)
clf4 = SVC(kernel = "linear", C = 0.025)
clf5 = GradientBoostingClassifier()
clf6 = AdaBoostClassifier()
clf7 = GaussianNB()
clf8 = QuadraticDiscriminantAnalysis()

 # [height, weight, shoe_size]
X = [[181, 80, 44], [177, 70, 43], [160, 60, 38], [154, 54, 37], [166, 65, 40],
     [190, 90, 47], [175, 64, 39],
     [177, 70, 40], [159, 55, 37], [171, 75, 42], [181, 85, 43]]
     
Y = ['male', 'male', 'female', 'female', 'male', 'male', 'female', 'female',
     'female', 'male', 'male']
     
# CHALLENGE - ...and train them on our data
clf = clf.fit(X, Y)
clf1 = clf1.fit(X,Y)
clf2 = clf2.fit(X,Y)
clf3 = clf3.fit(X,Y)
clf4 = clf4.fit(X,Y)
clf5 = clf5.fit(X,Y)
clf6 = clf6.fit(X,Y)
clf7 = clf7.fit(X,Y)
clf8 = clf8.fit(X,Y)

prediction =  clf.predict([[190, 70, 43]])
prediction1 = clf1.predict([[190, 70, 43]])
prediction2 = clf2.predict([[190, 70, 43]])
prediction3 = clf3.predict([[190, 70, 43]])
prediction4 = clf4.predict([[190, 70, 43]])
prediction5 = clf5.predict([[190, 70, 43]])
prediction6 = clf6.predict([[190, 70, 43]])
prediction7 = clf7.predict([[190, 70, 43]])
prediction8 = clf8.predict([[190, 70, 43]])

 # CHALLENGE compare their reusults and print the best one!

print(prediction)
print(prediction1)
print(prediction2)
print(prediction3)
print(prediction4)
print(prediction5)
print(prediction6)
print(prediction7)
print(prediction8)

print(accuracy_score (['male'], prediction))
print(accuracy_score (['male'], prediction1))
print(accuracy_score (['male'], prediction2))
print(accuracy_score (['male'], prediction3))
print(accuracy_score (['male'], prediction4))
print(accuracy_score (['male'], prediction5))
print(accuracy_score (['male'], prediction6))
print(accuracy_score (['male'], prediction7))
print(accuracy_score (['male'], prediction8))